/*
 * Adapted from The MIT License (MIT)
 *
 * Copyright (c) 2021-2021 DaPorkchop_
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * Any persons and/or organizations using this software must include the above copyright notice and this permission notice,
 * provide sufficient credit to the original authors of the project (IE: DaPorkchop_), as well as provide a link to the original project.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

buildscript {
    repositories {
        jcenter()
        maven {
            name = "Minecraft Forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.0"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

ext {
    //general things
    javaVersion = "1.8"
    rocksmcVersion = "0.0.1." + ('git rev-list --count HEAD'.execute().text.trim())

    //minecraft things
    mcpmappingsVersion = "stable_39"
    minecraftforgeVersion = "14.23.5.2847"
    minecraftVersion = "1.12.2"

    //dependency things
    cubicchunksVersion = "f4d7d2debf"
    cubicchunksconverterVersion = "af26e3dfe1"
    forgerocksVersion = "6.13.3-1.12.2"
    junitVersion = "4.12"
    leveldbVersion = "0.0.10-SNAPSHOT"
    lombokVersion = "1.18.16"
    rocksdbVersion = "6.13.3"
}

version = "$rocksmcVersion-$minecraftVersion"
group = "net.daporkchop"

compileJava {
    sourceCompatibility = targetCompatibility = "$javaVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
    maven {
        name = "JitPack"
        url = "https://jitpack.io/"
    }
    maven {
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    deobfCompile ("com.github.OpenCubicChunks.CubicChunks:cubicchunks:$cubicchunksVersion") {
        transitive = false
    }

    shade ("com.github.DaMatrix:CubicChunksConverter:$cubicchunksconverterVersion") {
        exclude group: "com.google.guava"
    }

    compile "net.daporkchop:forgerocks:$forgerocksVersion"

    testCompile "junit:junit:$junitVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

minecraft {
    version = "$minecraftVersion-$minecraftforgeVersion"
    runDir = "run"
    mappings = "$mcpmappingsVersion"
    makeObfSourceJar = false

    def args = [
            "-Xmx2G",
            "-XX:+UseG1GC",
            "-ea",
            "-da:io.netty..."
    ]
    clientJvmArgs += args
    serverJvmArgs += args
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    String branchName = System.getenv("BRANCH_NAME") //suffix jar name with branch name, if present and not the master branch
    branchName = branchName != null && !branchName.isEmpty() && !"master".equals(branchName) ? '-' + branchName.replaceAll("[^a-zA-Z0-9.-]", "_") : "";
    archiveName = "RocksMC-$rocksmcVersion-$minecraftVersion" + branchName + ".jar"

    classifier = null
    configurations = [project.configurations.shade]

    exclude 'module-info.class'
}
build.dependsOn shadowJar

reobf { //reobfuscate the shaded JAR
    shadowJar {}
}

//relocate all shaded dependencies
task relocateShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "net.daporkchop.rocksmc.dep"
}
shadowJar.dependsOn relocateShadowJar
